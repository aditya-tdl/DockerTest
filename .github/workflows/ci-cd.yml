name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
    runs-on: ubuntu-latest

    services:
      db: # If you have a database service, for example
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }} # Use secrets for sensitive data
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18.18.2" # Specify your exact Node version here

      - name: Install dependencies (Backend)
        run: |
          cd backend
          npm install

      - name: Build Backend Docker Image
        working-directory: ./backend
        run: |
          docker build -t merchantpos-backend-image .

      - name: Build Frontend Docker Image
        working-directory: ./merchantpos
        run: |
          docker build -t merchantpos-frontend-image .

      - name: Push Docker Images
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag merchantpos-backend-image adityatdl2023/merchantpos-backend-image:latest
          docker tag merchantpos-frontend-image adityatdl2023/merchantpos-frontend-image:latest
          docker push adityatdl2023/merchantpos-backend-image:latest
          docker push adityatdl2023/merchantpos-frontend-image:latest
